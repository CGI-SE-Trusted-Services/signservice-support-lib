group "se.signatureservice.support"

apply plugin: "groovy"
apply plugin: "java-library"

pluginManager.withPlugin('org.certificateservices.gradle.certservice-gradle-plugin') {
    certserviceSettings {
        signjar = true
        signjarFolder = "/tmp"
        useMavenCentral = true
        licenseName = "GNU Lesser General Public License v3.0 or later"
        licenseURL = "https://www.gnu.org/licenses/lgpl-3.0-standalone.html"
        useDeveloperPOM = true
        useScmPOM = true
        scmConnection = "https://github.com/CGI-SE-Trusted-Services/signservice-support-lib.git"
        scmDeveloperConnection = "https://github.com/CGI-SE-Trusted-Services/signservice-support-lib.git"
        scmUrl = "https://github.com/CGI-SE-Trusted-Services/signservice-support-lib"
        projectUrl = "https://github.com/CGI-SE-Trusted-Services/signservice-support-lib"
    }
}

repositories {
    mavenCentral()
}


configurations {
    integrationTestCompileClasspath.extendsFrom testCompileClasspath
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

configurations.configureEach {
    exclude group: 'xerces'
}

dependencies {
    api "eu.europa.ec.joinup.sd-dss:dss-xades:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-cades:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-pades:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-pades-pdfbox:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-service:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-utils:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-utils-apache-commons:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-crl-parser-x509crl:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-tsl-validation:$dssVersion"
    api "org.apache.pdfbox:pdfbox:2.0.27"
    api "org.apache.santuario:xmlsec:2.3.1"
    api "org.slf4j:slf4j-api:1.7.36"
    api("org.json:json:20230227") {
        exclude group: 'cn.hutool', module: 'hutool-json'
    }
    api "org.slf4j:slf4j-simple:1.7.36"
    api "org.apache.httpcomponents:httpclient:4.5.13"
    api "org.bouncycastle:bcprov-jdk15on:1.70"
    api("org.springframework:spring-context:5.3.27") {
        exclude module: "spring-beans"
    }
    api("org.certificateservices.messages:certservice-messages:2203.1") {
        // certservice-messages is using a newer version of xmlsec and bouncy castle
        // which is not compatible with the current version of DSS library.
        exclude module: "xmlsec"
        exclude group: "org.bouncycastle"
    }
    if(project.rootProject.name == "signservice") {
        api project(":signservice-java-configuration")
    }else {
        api("se.signatureservice.configuration:signservice-java-configuration:2203.1")

    }
    implementation "joda-time:joda-time:2.10.6"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.0"
    implementation 'com.fasterxml.woodstox:woodstox-core:6.4.0'

    testImplementation "eu.europa.ec.joinup.sd-dss:dss-token:$dssVersion"
    testImplementation "eu.europa.ec.joinup.sd-dss:dss-test:$dssVersion"
    testImplementation 'com.squareup.okhttp3:okhttp:4.10.0'
    testImplementation 'org.apache.tomcat.embed:tomcat-embed-core:9.0.75'
    testImplementation "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    testImplementation "org.codehaus.groovy:groovy-xml:3.0.12"
    testImplementation "org.codehaus.groovy:groovy-yaml:3.0.12"

    testImplementation platform("org.spockframework:spock-bom:2.2-groovy-3.0")
    testImplementation "org.spockframework:spock-core"
}

test {
    useJUnitPlatform()
}

publishing{
    repositories{
        maven {
            name 'mavenCentral'
            url (project.version =~ "SNAPSHOT"? "https://s01.oss.sonatype.org/content/repositories/snapshots/" : 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/')
            credentials {
                username = getGradleProperty("repository.sonatype.username")
                password = getGradleProperty("repository.sonatype.password")
            }
        }
    }
}

tasks.register('verifyRemoteSignProperties') {
    doFirst {
        verifyGradleProperties([
                "remotesign.signtype",
                "remotesign.keyid",
                "remotesign.org",
                "remotesign.baseurl",
                "remotesign.keystore.path",
                "remotesign.keystore.password",
                "remotesign.truststore.path",
                "remotesign.pgppublickey.path"
        ])

        verifyEnvironmentProperty("bamboo_remotesign_api_password")
    }
}

tasks.matching { it.name == 'signMavenPublication' }.configureEach { Task task ->
    task.dependsOn verifyRemoteSignProperties
}