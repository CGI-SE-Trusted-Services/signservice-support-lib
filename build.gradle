group "se.signatureservice.support"

apply plugin: "java-library"

certserviceSettings {
    useGroovyInMain = false
    useMavenCentral = true
    licenseName = "GNU Lesser General Public License v3.0 or later"
    licenseURL = "https://www.gnu.org/licenses/lgpl-3.0-standalone.html"

}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

configurations {
    integrationTestCompileClasspath.extendsFrom testCompileClasspath
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

configurations.all {
    exclude group: 'xerces'
}

dependencies {
    api "eu.europa.ec.joinup.sd-dss:dss-xades:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-cades:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-pades:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-pades-pdfbox:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-service:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-utils:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-utils-apache-commons:$dssVersion"
    api "eu.europa.ec.joinup.sd-dss:dss-crl-parser-x509crl:$dssVersion"
    api "org.apache.pdfbox:pdfbox:2.0.27"
    api "org.apache.santuario:xmlsec:2.3.1"
    api "org.slf4j:slf4j-api:1.7.36"
    api "org.json:json:20220320"
    api "org.slf4j:slf4j-simple:1.7.36"
    api "org.apache.httpcomponents:httpclient:4.5.13"
    api "org.bouncycastle:bcprov-jdk15on:1.70"
    api ("org.springframework:spring-context:5.3.23") {
        exclude module: "spring-beans"
    }
    api ("org.certificateservices.messages:certservice-messages:2203.1"){
        // certservice-messages is using a newer version of xmlsec and bouncy castle
        // which is not compatible with the current version of DSS library.
        exclude module: "xmlsec"
        exclude group: "org.bouncycastle"
    }
    api project(":signservice-java-configuration")

    implementation "joda-time:joda-time:2.10.6"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.0"
    implementation 'com.fasterxml.woodstox:woodstox-core:6.4.0'

    testImplementation "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    testImplementation "org.codehaus.groovy:groovy-xml:3.0.12"
    testImplementation "org.codehaus.groovy:groovy-yaml:3.0.12"

    integrationTestImplementation platform("org.spockframework:spock-bom:2.1-groovy-3.0")
    integrationTestImplementation "org.spockframework:spock-core"
}

test {
    useJUnitPlatform()
}

task uploadGdc(type: Upload) {
    configuration = configurations.archives
    uploadDescriptor = true

    repositories {
        mavenDeployer {
            repository(url: "https://nexus2.dk.cgi.com/repository/Inera-maven-releases.repository") {
                authentication(userName: getGdcRepoUsername(), password: getGdcRepoPassword())
            }
            pom.version = version
        }
    }
}

uploadGdc.dependsOn(build)

def getGdcRepoUsername(){
    def gdcRepoUsername = ext.has('repository.gdc.username') ? ext['repository.gdc.username'] : ""
    if(gdcRepoUsername == null || gdcRepoUsername.trim() == ""){
        println("Warning: no GDC Repository Credentials set in gradle.properties. Set values 'repository.gdc.username' and 'repository.gdc.password'.")
    }
    return gdcRepoUsername
}

def getGdcRepoPassword(){
    def gdcRepoPassword = ext.has('repository.gdc.password') ? ext['repository.gdc.password'] : ""
    if(gdcRepoPassword == null || gdcRepoPassword.trim() == ""){
        println("Warning: no GDC Repository Credentials set in gradle.properties. Set values 'repository.gdc.username' and 'repository.gdc.password'.")
    }
    return gdcRepoPassword
}